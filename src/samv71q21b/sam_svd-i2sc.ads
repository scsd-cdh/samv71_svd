
pragma Style_Checks (Off);

--  This spec has been automatically generated from ATSAMV71Q21B.svd

pragma Restrictions (No_Elaboration_Code);

with HAL;
with System;

package SAM_SVD.I2SC is
   pragma Preelaborate;

   ---------------
   -- Registers --
   ---------------

   --  Control Register
   type I2SC_CR_Register is record
      --  Write-only. Receiver Enable
      RXEN          : Boolean := False;
      --  Write-only. Receiver Disable
      RXDIS         : Boolean := False;
      --  Write-only. Clocks Enable
      CKEN          : Boolean := False;
      --  Write-only. Clocks Disable
      CKDIS         : Boolean := False;
      --  Write-only. Transmitter Enable
      TXEN          : Boolean := False;
      --  Write-only. Transmitter Disable
      TXDIS         : Boolean := False;
      --  unspecified
      Reserved_6_6  : HAL.Bit := 16#0#;
      --  Write-only. Software Reset
      SWRST         : Boolean := False;
      --  unspecified
      Reserved_8_31 : HAL.UInt24 := 16#0#;
   end record
     with Volatile_Full_Access, Object_Size => 32,
          Bit_Order => System.Low_Order_First;

   for I2SC_CR_Register use record
      RXEN          at 0 range 0 .. 0;
      RXDIS         at 0 range 1 .. 1;
      CKEN          at 0 range 2 .. 2;
      CKDIS         at 0 range 3 .. 3;
      TXEN          at 0 range 4 .. 4;
      TXDIS         at 0 range 5 .. 5;
      Reserved_6_6  at 0 range 6 .. 6;
      SWRST         at 0 range 7 .. 7;
      Reserved_8_31 at 0 range 8 .. 31;
   end record;

   --  Inter-IC Sound Controller Mode
   type MR_MODESelect is
     (--  I2SC_CK and I2SC_WS pin inputs used as bit clock and word select/frame
--  synchronization.
      SLAVE,
      --  Bit clock and word select/frame synchronization generated by I2SC from MCK
--  and output to I2SC_CK and I2SC_WS pins. Peripheral clock or GCLK is output
--  as master clock on I2SC_MCK if I2SC_MR.IMCKMODE is set.
      MASTER)
     with Size => 1;
   for MR_MODESelect use
     (SLAVE => 0,
      MASTER => 1);

   --  Data Word Length
   type MR_DATALENGTHSelect is
     (--  Data length is set to 32 bits
      Val_32_BITS,
      --  Data length is set to 24 bits
      Val_24_BITS,
      --  Data length is set to 20 bits
      Val_20_BITS,
      --  Data length is set to 18 bits
      Val_18_BITS,
      --  Data length is set to 16 bits
      Val_16_BITS,
      --  Data length is set to 16-bit compact stereo. Left sample in bits 15:0 and
--  right sample in bits 31:16 of same word.
      Val_16_BITS_COMPACT,
      --  Data length is set to 8 bits
      Val_8_BITS,
      --  Data length is set to 8-bit compact stereo. Left sample in bits 7:0 and
--  right sample in bits 15:8 of the same word.
      Val_8_BITS_COMPACT)
     with Size => 3;
   for MR_DATALENGTHSelect use
     (Val_32_BITS => 0,
      Val_24_BITS => 1,
      Val_20_BITS => 2,
      Val_18_BITS => 3,
      Val_16_BITS => 4,
      Val_16_BITS_COMPACT => 5,
      Val_8_BITS => 6,
      Val_8_BITS_COMPACT => 7);

   subtype I2SC_MR_IMCKDIV_Field is HAL.UInt6;

   --  Master Clock to fs Ratio
   type MR_IMCKFSSelect is
     (--  Sample frequency ratio set to 32
      M2SF32,
      --  Sample frequency ratio set to 64
      M2SF64,
      --  Sample frequency ratio set to 96
      M2SF96,
      --  Sample frequency ratio set to 128
      M2SF128,
      --  Sample frequency ratio set to 192
      M2SF192,
      --  Sample frequency ratio set to 256
      M2SF256,
      --  Sample frequency ratio set to 384
      M2SF384,
      --  Sample frequency ratio set to 512
      M2SF512,
      --  Sample frequency ratio set to 768
      M2SF768,
      --  Sample frequency ratio set to 1024
      M2SF1024,
      --  Sample frequency ratio set to 1536
      M2SF1536,
      --  Sample frequency ratio set to 2048
      M2SF2048)
     with Size => 6;
   for MR_IMCKFSSelect use
     (M2SF32 => 0,
      M2SF64 => 1,
      M2SF96 => 2,
      M2SF128 => 3,
      M2SF192 => 5,
      M2SF256 => 7,
      M2SF384 => 11,
      M2SF512 => 15,
      M2SF768 => 23,
      M2SF1024 => 31,
      M2SF1536 => 47,
      M2SF2048 => 63);

   --  Mode Register
   type I2SC_MR_Register is record
      --  Inter-IC Sound Controller Mode
      MODE           : MR_MODESelect := SAM_SVD.I2SC.SLAVE;
      --  unspecified
      Reserved_1_1   : HAL.Bit := 16#0#;
      --  Data Word Length
      DATALENGTH     : MR_DATALENGTHSelect := SAM_SVD.I2SC.Val_32_BITS;
      --  unspecified
      Reserved_5_7   : HAL.UInt3 := 16#0#;
      --  Receive Mono
      RXMONO         : Boolean := False;
      --  Single or Multiple DMA Controller Channels for Receiver
      RXDMA          : Boolean := False;
      --  Loopback Test Mode
      RXLOOP         : Boolean := False;
      --  unspecified
      Reserved_11_11 : HAL.Bit := 16#0#;
      --  Transmit Mono
      TXMONO         : Boolean := False;
      --  Single or Multiple DMA Controller Channels for Transmitter
      TXDMA          : Boolean := False;
      --  Transmit Data when Underrun
      TXSAME         : Boolean := False;
      --  unspecified
      Reserved_15_15 : HAL.Bit := 16#0#;
      --  Selected Clock to I2SC Master Clock Ratio
      IMCKDIV        : I2SC_MR_IMCKDIV_Field := 16#0#;
      --  unspecified
      Reserved_22_23 : HAL.UInt2 := 16#0#;
      --  Master Clock to fs Ratio
      IMCKFS         : MR_IMCKFSSelect := SAM_SVD.I2SC.M2SF32;
      --  Master Clock Mode
      IMCKMODE       : Boolean := False;
      --  I2SC_WS Slot Width
      IWS            : Boolean := False;
   end record
     with Volatile_Full_Access, Object_Size => 32,
          Bit_Order => System.Low_Order_First;

   for I2SC_MR_Register use record
      MODE           at 0 range 0 .. 0;
      Reserved_1_1   at 0 range 1 .. 1;
      DATALENGTH     at 0 range 2 .. 4;
      Reserved_5_7   at 0 range 5 .. 7;
      RXMONO         at 0 range 8 .. 8;
      RXDMA          at 0 range 9 .. 9;
      RXLOOP         at 0 range 10 .. 10;
      Reserved_11_11 at 0 range 11 .. 11;
      TXMONO         at 0 range 12 .. 12;
      TXDMA          at 0 range 13 .. 13;
      TXSAME         at 0 range 14 .. 14;
      Reserved_15_15 at 0 range 15 .. 15;
      IMCKDIV        at 0 range 16 .. 21;
      Reserved_22_23 at 0 range 22 .. 23;
      IMCKFS         at 0 range 24 .. 29;
      IMCKMODE       at 0 range 30 .. 30;
      IWS            at 0 range 31 .. 31;
   end record;

   subtype I2SC_SR_RXORCH_Field is HAL.UInt2;
   subtype I2SC_SR_TXURCH_Field is HAL.UInt2;

   --  Status Register
   type I2SC_SR_Register is record
      --  Read-only. Receiver Enabled
      RXEN           : Boolean;
      --  Read-only. Receive Ready
      RXRDY          : Boolean;
      --  Read-only. Receive Overrun
      RXOR           : Boolean;
      --  unspecified
      Reserved_3_3   : HAL.Bit;
      --  Read-only. Transmitter Enabled
      TXEN           : Boolean;
      --  Read-only. Transmit Ready
      TXRDY          : Boolean;
      --  Read-only. Transmit Underrun
      TXUR           : Boolean;
      --  unspecified
      Reserved_7_7   : HAL.Bit;
      --  Read-only. Receive Overrun Channel
      RXORCH         : I2SC_SR_RXORCH_Field;
      --  unspecified
      Reserved_10_19 : HAL.UInt10;
      --  Read-only. Transmit Underrun Channel
      TXURCH         : I2SC_SR_TXURCH_Field;
      --  unspecified
      Reserved_22_31 : HAL.UInt10;
   end record
     with Volatile_Full_Access, Object_Size => 32,
          Bit_Order => System.Low_Order_First;

   for I2SC_SR_Register use record
      RXEN           at 0 range 0 .. 0;
      RXRDY          at 0 range 1 .. 1;
      RXOR           at 0 range 2 .. 2;
      Reserved_3_3   at 0 range 3 .. 3;
      TXEN           at 0 range 4 .. 4;
      TXRDY          at 0 range 5 .. 5;
      TXUR           at 0 range 6 .. 6;
      Reserved_7_7   at 0 range 7 .. 7;
      RXORCH         at 0 range 8 .. 9;
      Reserved_10_19 at 0 range 10 .. 19;
      TXURCH         at 0 range 20 .. 21;
      Reserved_22_31 at 0 range 22 .. 31;
   end record;

   subtype I2SC_SCR_RXORCH_Field is HAL.UInt2;
   subtype I2SC_SCR_TXURCH_Field is HAL.UInt2;

   --  Status Clear Register
   type I2SC_SCR_Register is record
      --  unspecified
      Reserved_0_1   : HAL.UInt2 := 16#0#;
      --  Write-only. Receive Overrun Status Clear
      RXOR           : Boolean := False;
      --  unspecified
      Reserved_3_5   : HAL.UInt3 := 16#0#;
      --  Write-only. Transmit Underrun Status Clear
      TXUR           : Boolean := False;
      --  unspecified
      Reserved_7_7   : HAL.Bit := 16#0#;
      --  Write-only. Receive Overrun Per Channel Status Clear
      RXORCH         : I2SC_SCR_RXORCH_Field := 16#0#;
      --  unspecified
      Reserved_10_19 : HAL.UInt10 := 16#0#;
      --  Write-only. Transmit Underrun Per Channel Status Clear
      TXURCH         : I2SC_SCR_TXURCH_Field := 16#0#;
      --  unspecified
      Reserved_22_31 : HAL.UInt10 := 16#0#;
   end record
     with Volatile_Full_Access, Object_Size => 32,
          Bit_Order => System.Low_Order_First;

   for I2SC_SCR_Register use record
      Reserved_0_1   at 0 range 0 .. 1;
      RXOR           at 0 range 2 .. 2;
      Reserved_3_5   at 0 range 3 .. 5;
      TXUR           at 0 range 6 .. 6;
      Reserved_7_7   at 0 range 7 .. 7;
      RXORCH         at 0 range 8 .. 9;
      Reserved_10_19 at 0 range 10 .. 19;
      TXURCH         at 0 range 20 .. 21;
      Reserved_22_31 at 0 range 22 .. 31;
   end record;

   subtype I2SC_SSR_RXORCH_Field is HAL.UInt2;
   subtype I2SC_SSR_TXURCH_Field is HAL.UInt2;

   --  Status Set Register
   type I2SC_SSR_Register is record
      --  unspecified
      Reserved_0_1   : HAL.UInt2 := 16#0#;
      --  Write-only. Receive Overrun Status Set
      RXOR           : Boolean := False;
      --  unspecified
      Reserved_3_5   : HAL.UInt3 := 16#0#;
      --  Write-only. Transmit Underrun Status Set
      TXUR           : Boolean := False;
      --  unspecified
      Reserved_7_7   : HAL.Bit := 16#0#;
      --  Write-only. Receive Overrun Per Channel Status Set
      RXORCH         : I2SC_SSR_RXORCH_Field := 16#0#;
      --  unspecified
      Reserved_10_19 : HAL.UInt10 := 16#0#;
      --  Write-only. Transmit Underrun Per Channel Status Set
      TXURCH         : I2SC_SSR_TXURCH_Field := 16#0#;
      --  unspecified
      Reserved_22_31 : HAL.UInt10 := 16#0#;
   end record
     with Volatile_Full_Access, Object_Size => 32,
          Bit_Order => System.Low_Order_First;

   for I2SC_SSR_Register use record
      Reserved_0_1   at 0 range 0 .. 1;
      RXOR           at 0 range 2 .. 2;
      Reserved_3_5   at 0 range 3 .. 5;
      TXUR           at 0 range 6 .. 6;
      Reserved_7_7   at 0 range 7 .. 7;
      RXORCH         at 0 range 8 .. 9;
      Reserved_10_19 at 0 range 10 .. 19;
      TXURCH         at 0 range 20 .. 21;
      Reserved_22_31 at 0 range 22 .. 31;
   end record;

   --  Interrupt Enable Register
   type I2SC_IER_Register is record
      --  unspecified
      Reserved_0_0  : HAL.Bit := 16#0#;
      --  Write-only. Receiver Ready Interrupt Enable
      RXRDY         : Boolean := False;
      --  Write-only. Receiver Overrun Interrupt Enable
      RXOR          : Boolean := False;
      --  unspecified
      Reserved_3_4  : HAL.UInt2 := 16#0#;
      --  Write-only. Transmit Ready Interrupt Enable
      TXRDY         : Boolean := False;
      --  Write-only. Transmit Underflow Interrupt Enable
      TXUR          : Boolean := False;
      --  unspecified
      Reserved_7_31 : HAL.UInt25 := 16#0#;
   end record
     with Volatile_Full_Access, Object_Size => 32,
          Bit_Order => System.Low_Order_First;

   for I2SC_IER_Register use record
      Reserved_0_0  at 0 range 0 .. 0;
      RXRDY         at 0 range 1 .. 1;
      RXOR          at 0 range 2 .. 2;
      Reserved_3_4  at 0 range 3 .. 4;
      TXRDY         at 0 range 5 .. 5;
      TXUR          at 0 range 6 .. 6;
      Reserved_7_31 at 0 range 7 .. 31;
   end record;

   --  Interrupt Disable Register
   type I2SC_IDR_Register is record
      --  unspecified
      Reserved_0_0  : HAL.Bit := 16#0#;
      --  Write-only. Receiver Ready Interrupt Disable
      RXRDY         : Boolean := False;
      --  Write-only. Receiver Overrun Interrupt Disable
      RXOR          : Boolean := False;
      --  unspecified
      Reserved_3_4  : HAL.UInt2 := 16#0#;
      --  Write-only. Transmit Ready Interrupt Disable
      TXRDY         : Boolean := False;
      --  Write-only. Transmit Underflow Interrupt Disable
      TXUR          : Boolean := False;
      --  unspecified
      Reserved_7_31 : HAL.UInt25 := 16#0#;
   end record
     with Volatile_Full_Access, Object_Size => 32,
          Bit_Order => System.Low_Order_First;

   for I2SC_IDR_Register use record
      Reserved_0_0  at 0 range 0 .. 0;
      RXRDY         at 0 range 1 .. 1;
      RXOR          at 0 range 2 .. 2;
      Reserved_3_4  at 0 range 3 .. 4;
      TXRDY         at 0 range 5 .. 5;
      TXUR          at 0 range 6 .. 6;
      Reserved_7_31 at 0 range 7 .. 31;
   end record;

   --  Interrupt Mask Register
   type I2SC_IMR_Register is record
      --  unspecified
      Reserved_0_0  : HAL.Bit;
      --  Read-only. Receiver Ready Interrupt Disable
      RXRDY         : Boolean;
      --  Read-only. Receiver Overrun Interrupt Disable
      RXOR          : Boolean;
      --  unspecified
      Reserved_3_4  : HAL.UInt2;
      --  Read-only. Transmit Ready Interrupt Disable
      TXRDY         : Boolean;
      --  Read-only. Transmit Underflow Interrupt Disable
      TXUR          : Boolean;
      --  unspecified
      Reserved_7_31 : HAL.UInt25;
   end record
     with Volatile_Full_Access, Object_Size => 32,
          Bit_Order => System.Low_Order_First;

   for I2SC_IMR_Register use record
      Reserved_0_0  at 0 range 0 .. 0;
      RXRDY         at 0 range 1 .. 1;
      RXOR          at 0 range 2 .. 2;
      Reserved_3_4  at 0 range 3 .. 4;
      TXRDY         at 0 range 5 .. 5;
      TXUR          at 0 range 6 .. 6;
      Reserved_7_31 at 0 range 7 .. 31;
   end record;

   -----------------
   -- Peripherals --
   -----------------

   --  Inter-IC Sound Controller
   type I2SC_Peripheral is record
      --  Control Register
      CR  : aliased I2SC_CR_Register;
      --  Mode Register
      MR  : aliased I2SC_MR_Register;
      --  Status Register
      SR  : aliased I2SC_SR_Register;
      --  Status Clear Register
      SCR : aliased I2SC_SCR_Register;
      --  Status Set Register
      SSR : aliased I2SC_SSR_Register;
      --  Interrupt Enable Register
      IER : aliased I2SC_IER_Register;
      --  Interrupt Disable Register
      IDR : aliased I2SC_IDR_Register;
      --  Interrupt Mask Register
      IMR : aliased I2SC_IMR_Register;
      --  Receiver Holding Register
      RHR : aliased HAL.UInt32;
      --  Transmitter Holding Register
      THR : aliased HAL.UInt32;
   end record
     with Volatile;

   for I2SC_Peripheral use record
      CR  at 16#0# range 0 .. 31;
      MR  at 16#4# range 0 .. 31;
      SR  at 16#8# range 0 .. 31;
      SCR at 16#C# range 0 .. 31;
      SSR at 16#10# range 0 .. 31;
      IER at 16#14# range 0 .. 31;
      IDR at 16#18# range 0 .. 31;
      IMR at 16#1C# range 0 .. 31;
      RHR at 16#20# range 0 .. 31;
      THR at 16#24# range 0 .. 31;
   end record;

   --  Inter-IC Sound Controller
   I2SC0_Periph : aliased I2SC_Peripheral
     with Import, Address => I2SC0_Base;

   --  Inter-IC Sound Controller
   I2SC1_Periph : aliased I2SC_Peripheral
     with Import, Address => I2SC1_Base;

end SAM_SVD.I2SC;
